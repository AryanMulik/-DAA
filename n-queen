#include<iostream>
#include<vector>
using namespace std;
bool isSafe(vector<vector<int>>& board, int x, int y){
	int n = board.size();
	for(int col=0;col<y;col++){
		if(board[x][col]==1){
			return false;
		}
	}
	int row=x;
	int col=y;
	while(row>=0 && col>=0){
		if(board[row][col]==1){
			return false;
		}
		row--;
		col--;
	}
	row=x;
	col=y;
	while(row<n && col>=0){
		if(board[row][col]==1){
			return false;
		}
		row++;
		col--;
	}
	return true;
}
bool nQueen(vector<vector<int>>& board,int y)
{
	int n = board.size();
	if(y>=n){
		return true;
	}	
	for(int row=0;row<n;row++){
		if(isSafe(board,row,y)){
			board[row][y]=1;
			if(nQueen(board,y+1)){
				return true;
			}
			board[row][y]=0;
		}	
	}
	return false;
}
int main(){
	int n;
	cout<<"Enter the number of queens : ";
	cin>>n;
	vector<vector<int>> board(n,vector<int>(n,0));
	if(nQueen(board,0)==true)
	{
		cout<<"Solution 1 : "<<endl;
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				cout<<board[i][j]<<" ";
			}
			cout<<endl;
		}
		cout<<"Solution 2 : "<<endl;
		for(int i=0;i<n;i++){
			for(int j=n-1;j>=0;j--)
			{
				cout<<board[i][j]<<" ";
			}
			cout<<endl;
		}
	}
	else
	{
		cout<<"No solutions.";
	}
}
